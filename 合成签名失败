合成签名失败
 [contractId:2947409154941166601, documentId:2947409155318653959]合同文档页面的信息已经被删除，需要重新生成
cn.bestsign.delta.aggregation.contract.exception.SignException: null
	at cn.bestsign.delta.aggregation.contract.logic.sign.PdfSignLogic.doSignatureWithStamper(PdfSignLogic.java:485)
	at cn.bestsign.delta.aggregation.contract.logic.sign.PdfSignLogic.doReBuildPdfProcess(PdfSignLogic.java:181)
	at cn.bestsign.delta.aggregation.contract.logic.sign.PdfSignLogic.signPdf(PdfSignLogic.java:140)
	at cn.bestsign.delta.aggregation.contract.logic.sign.PdfSignLogic.signPdfContract(PdfSignLogic.java:70)
	at cn.bestsign.delta.aggregation.contract.logic.contract.signlabel.SignLabelLogic.mergeLabelsAndSignDocument(SignLabelLogic.java:1524)
	at cn.bestsign.delta.aggregation.contract.logic.contract.signlabel.SignLabelLogic.signCompose(SignLabelLogic.java:432)
	at cn.bestsign.delta.aggregation.contract.logic.contract.signlabel.SignLabelLogic$$FastClassBySpringCGLIB$$a026825a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at cn.bestsign.delta.aggregation.contract.logic.contract.signlabel.SignLabelLogic$$EnhancerBySpringCGLIB$$cb284ff.signCompose(<generated>)
	at cn.bestsign.delta.aggregation.contract.logic.contract.ContractLogic.doHandleCompose(ContractLogic.java:3568)
	at cn.bestsign.delta.aggregation.contract.logic.contract.ContractLogic.tryHandleCompose(ContractLogic.java:3426)
	at cn.bestsign.delta.aggregation.contract.logic.contract.ContractLogic$$FastClassBySpringCGLIB$$e9997e70.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at cn.bestsign.delta.aggregation.contract.aop.NotifyAop.doNotify(NotifyAop.java:104)
	at cn.bestsign.delta.aggregation.contract.aop.NotifyAop.Notify(NotifyAop.java:64)
	at sun.reflect.GeneratedMethodAccessor1625.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at cn.bestsign.delta.aggregation.contract.logic.contract.ContractLogic$$EnhancerBySpringCGLIB$$c5ccae4c.tryHandleCompose(<generated>)
	at cn.bestsign.delta.aggregation.contract.listener.ContractHandleMQListener.handleSignatureCompose(ContractHandleMQListener.java:76)
	at sun.reflect.GeneratedMethodAccessor1740.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:50)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:211)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:143)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:132)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1569)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1488)
	at sun.reflect.GeneratedMethodAccessor730.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:91)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at org.springframework.amqp.rabbit.listener.$Proxy336.invokeListener(Unknown Source)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1476)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1467)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1411)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:958)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:908)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:81)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1279)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1185)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.itextpdf.text.DocumentException: Append mode requires a document without errors even if recovery was possible.
	at com.itextpdf.text.pdf.PdfStamperImp.<init>(PdfStamperImp.java:152)
	at com.itextpdf.text.pdf.PdfStamper.<init>(PdfStamper.java:132)
	at com.itextpdf.text.pdf.PdfStamper.createSignature(PdfStamper.java:697)
	at cn.bestsign.delta.aggregation.contract.logic.sign.PdfSignLogic.doSignatureWithStamper(PdfSignLogic.java:469)
	... 66 common frames omitted


2021-12-22T01:18:59.561+08:00
  ---signHashFromServer--<html>
  <head><title>504 Gateway Time-out</title></head>
  <body bgcolor="white">
  <center><h1>504 Gateway Time-out</h1></center>
  <hr><center>nginx</center>
